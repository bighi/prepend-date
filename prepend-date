#!/usr/bin/env python2

import os
import sys
import platform
import datetime

def creation_date(path_to_file):
    """
    Try to get the date that a file was created, falling back to when it was
    last modified if that isn't possible.
    See http://stackoverflow.com/a/39501288/1709587 for explanation.
    """
    if platform.system() == 'Windows':
        return os.path.getctime(path_to_file)
    else:
        stat = os.stat(path_to_file)
        try:
            return stat.st_birthtime
        except AttributeError:
            # We're probably on Linux. No easy way to get creation dates here,
            # so we'll settle for when its content was last modified.
            return stat.st_mtime

def geotags(path_to_file):
    return None

def is_image(extension):
    image_extensions = ['.jpg','.jpeg','.png']
    if (extension.lower().endwith(tuple(image_extensions))):
        return true
    else:
        return false


def create_new_name(path_to_file):
    creation_time = datetime.datetime.fromtimestamp(creation_date(path_to_file)).strftime("%Y-%m-%d")
    original_name, extension = os.path.splitext(os.path.basename(path_to_file))
    # basename = os.path.basename(path_to_file)
    # geotags = geotags(path_to_file)
    geotags = None

    name = str(creation_time) + " - " + original_name

    if (geotags):
        name = name + " - " + geotags

    name = name + extension

    return name

def rename_file(path_to_file, new_name):
    os.rename(path_to_file, os.path.join(os.path.dirname(path_to_file), new_name))

def log(path_to_file, name):
    print "Arquivo " + os.path.basename(path_to_file) + "  -->  " + name

path_to_file = sys.argv[1]
name = create_new_name(path_to_file)

log(path_to_file, name)
rename_file(path_to_file, name)

